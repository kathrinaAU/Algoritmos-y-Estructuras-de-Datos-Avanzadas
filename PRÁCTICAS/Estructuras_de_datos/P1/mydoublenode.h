#ifndef MYDOUBLENODE_H
#define MYDOUBLENODE_H

#include <iostream>
#include <ostream>
#include <istream>
#pragma once
using namespace std;

template <class TDATO> /** < Template TDATO */
class myDoubleNode
{

private: /**< Métodos privados */

    myDoubleNode<TDATO>* next_; /**< TDATO que es el siguiente nodo. */
    myDoubleNode<TDATO>* prev_; /**< TDATO que es el nodo anterior. */
    TDATO dato_; /**< TDATO que es el dato del nodo. */

public: /**< Métodos públicos. */

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Constructor de la clase sin parámetros.

*/
    myDoubleNode();

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Constructor de la clase con parámetros.

*/
    myDoubleNode(TDATO& dato);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Destructor de la clase.

*/
    ~myDoubleNode();

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Método de la clase que modifica el valor del siguiente.
	@param nodo TDATO que será el nuevo nodo que se colocará delante del actual.

*/ 
    void set_next(myDoubleNode<TDATO>*);
    
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Método de la clase que modifica el valor del anterior.
	@param TDATO que será el nuevo nodo que se colocará detrás del actual.

*/ 
    void set_prev(myDoubleNode<TDATO>*);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Método de la clase que nos devuelve el valor del siguiente.
	
*/ 
    myDoubleNode<TDATO>* get_next();

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Método de la clase que nos devuelve el valor del anterior.
	
*/     
    myDoubleNode<TDATO>* get_prev();
    
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Método de la clase que modifica el dato actual por el nuevo dato.
	@param TDATO dato con el que modificaremos el dato actual.
	
*/ 
    void set_dato(TDATO& dato);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Método de la clase que devuelve el dato.
	
*/ 
    TDATO get_dato();
    
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Método de la clase que sirve para escribir los datos.
	
*/ 
    ostream& write(ostream& os) const;

};


#include "mydoublenode.hpp"

#endif // MYDOUBLENODE_H

