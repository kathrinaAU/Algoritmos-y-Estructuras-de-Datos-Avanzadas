#ifndef MYROUNDVECTOR_H
#define MYROUNDVECTOR_H

#include <cassert>
#pragma once
#include <cstdio>
#include <iostream>
#include <iomanip>

template <class TDATO> /** < Template TDATO */
class myRoundVector
{

private:
    TDATO *v_; /** < Vector del tipo TDATO */
    int sz_; /** Tamaño del vector <  */


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles  Método de la clase que crea el vector.

*/
    void crea_vector(); 

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Método de la clase que destruye el vector.

*/
    void destruye_vector();

public: /** <Métodos públicos. */


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Constructor de la clase sin parámetros.

*/
    myRoundVector();

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Constructor de la clase con parámetros.
	@param  Entero tam que es el tamaño inicial del vector circular.

*/
    myRoundVector(int tam);


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Destructor de la clase.

*/
    ~myRoundVector();


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Método que devuelve si el vector está vacío o no.
    * @return Resultado de comprobar si está vacío.
	* @retval TRUE  Indica que el vector está vacío.
	* @retval FALSE  Indica que el vector no está vacío.
*/
    bool isEmpty();

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Método que introduce un dato en el vector.
	@param TDATO newdato es el dato que se quiere introducir en el vector.
*/  
    void pushBack(TDATO newdato);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Método que saca un dato del vector.

*/  
    void popBack();

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Método que nos sirve para redimensionar el tamaño del vector.
	@param Entero tam que será el nuevo tamaño con el que redimensionaremos el vector.

*/
    void resize(int tam);
    
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Método que nos sirve para conocer el tamaño ocupado del vector.
	
*/
    int size();

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Método que nos sirve para conocer el elemento ocupado por esa posiciíon del vector.
	@param Entero pos que nos indica la posición a usar.
*/
    TDATO get(int pos);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
/**    
            @autor   	Kathrina Arrocha UmpiÃ©rrez (alu0100913293@ull.edu.es)
        
        @fecha 	    Jueves 15 de Febrero de 2018

	@detalles 	Método que nos sirve para cambiar el elemento ocupado en esa posiciíon del vector por otro nuevo elemento, pasado por parámetros.
    @param Entero pos que nos indica la posición a usar.
	@param TDATO dato que es el dato a introducir en la pos.
*/
    TDATO set(int pos,TDATO dato);

};

#include "myroundvector.hpp"
#endif // MYROUNDVECTOR_H




